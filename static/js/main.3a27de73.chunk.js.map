{"version":3,"sources":["components/Bot.js","components/Search.js","config.js","routes/Home.js","routes/About.js","routes/Detail.js","routes/Search.js","routes/Callback.js","components/404.js","components/Menu.js","App.js","index.js"],"names":["Bot","data","id","name","avatar","votes","servers","intro","category","desc","Grid","Column","mobile","tablet","computer","largeScreen","widescreen","Segment","stacked","padded","color","Row","width","Item","Group","link","Image","size","src","Content","to","Header","href","Description","Button","className","content","icon","labelPosition","SearchExampleStandard","state","value","redirect","Input","onKeyDown","this","handleSubmit","bind","onChange","handleChange","placeholder","event","setState","target","e","key","console","log","Component","url","api","Home","isLoading","bot","getData","a","async","axios","get","config","stackable","centered","columns","map","Array","React","About","props","Detail","result","error","match","params","history","push","Container","divided","rounded","style","Label","circular","status","empty","prefix","lib","tag","length","c","as","web","git","github","class","Divider","section","online","idle","dnd","offline","streaming","then","user","res","code","localStorage","setItem","token","post","headers","username","newUser","location","search","replace","URLSearchParams","MenuExampleStackable","setup","p5","canvasParentRef","createCanvas","window","innerWidth","innerHeight","parent","draw","background","noStroke","i","ellipse","Math","floor","random","x","method","r","catch","err","Menu","alt","position","Config","App","getItem","path","exact","component","Search","Callback","NotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a27de73.chunk.js","sourcesContent":["import React from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Segment, Grid, Button, Item } from 'semantic-ui-react'\r\nimport \"./Bot.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Bot({ data, id, name, avatar, votes, servers, category, intro, desc}) {\r\n  return (\r\n    <div>\r\n          <Grid.Column mobile={10} tablet={5} computer={5} largeScreen={5} widescreen={5}>\r\n            <Segment stacked padded color='blue'>\r\n              <Grid>\r\n                <Grid.Row>\r\n                  <Grid.Column width={16}>\r\n                    <Item.Group link>\r\n                      <Item>\r\n                        <Item.Image size='small' src={avatar} avatar/>\r\n\r\n                          <Item.Content>\r\n                            <Link to={\"/bots/\"+id}/>\r\n                            <Item.Header><a href={\"/bots/\"+id}>{name}</a></Item.Header>\r\n                              <Item.Description>{intro}</Item.Description>\r\n                              <Button className=\"discord\" content={servers==0? 'N/A' : servers + ' 서버'} ></Button>\r\n                              <Button content={votes} color='red' icon='heart' labelPosition='right' />\r\n                                  </Item.Content>\r\n                                </Item>\r\n                              </Item.Group>\r\n                      </Grid.Column>\r\n                      \r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n            </Grid.Column>\r\n        </div>\r\n      \r\n   \r\n     \r\n  );\r\n}\r\n\r\nexport default Bot;\r\n","import React, { Component } from 'react'\r\nimport {Input, Grid} from 'semantic-ui-react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Search.css\"\r\nexport default class SearchExampleStandard extends Component {\r\n    state = {\r\n        value: \"\",\r\n        redirect: false\r\n    }\r\n    render() {  \r\n        \r\n      return (\r\n         \r\n    <div className=\"search\">\r\n          <Input className=\"box\" size='' onKeyDown={this.handleSubmit.bind(this)} onChange={this.handleChange.bind(this)} icon='search' placeholder='검색...'/>\r\n  \r\n              {this.state.redirect ? (\r\n                   <Redirect to={\"/search?q=\"+this.state.value}></Redirect>\r\n              ) : (\r\n                  ''\r\n              ) }\r\n          </div>\r\n    )\r\n     \r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            value: event.target.value\r\n          });\r\n    }\r\n    handleSubmit(e) {\r\n        if (e.key === 'Enter') {\r\n            console.log('g')\r\n            this.setState({redirect : true})\r\n        }\r\n    }\r\n  }","export default {\r\n    url : 'https://discordapp.com/api/oauth2/authorize?client_id=653534001742741552&redirect_uri=https://beta.wonderbot.xyz/callback&response_type=code&scope=identify',\r\n    \r\n    api : 'http://121.167.253.32'\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Bot from \"../components/Bot\";\r\nimport Search from \"../components/Search\"\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport config from '../config'\r\n\r\nimport \"./Home.css\";\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    bot: {}\r\n  };\r\n  getData = async () => {\r\n    const bot = await axios.get(\r\n      config.api + '/bots/get'\r\n    )\r\n    this.setState({ bot, isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  render() {\r\n    const { isLoading, bot } = this.state;\r\n    return (\r\n      \r\n      \r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n         \r\n          <div className=\"bot\">\r\n         <Grid stackable centered columns={2}>\r\n              <Grid.Row>\r\n            {bot.data.data.map(bot => (\r\n              <Bot\r\n                data={bot}\r\n                key={bot.id}\r\n                id={bot.id}\r\n                name={bot.name}\r\n                avatar={\"https://cdn.discordapp.com/avatars/\"+bot.id+\"/\"+bot.avatar+\".webp\"}\r\n                votes={bot.votes}\r\n                servers={bot.servers}\r\n                category={new Array(bot.category)}\r\n                intro={bot.intro}\r\n                desc={bot.desc}\r\n              />\r\n            ))}\r\n            </Grid.Row>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default class extends React.Component {\r\n\r\nrender(){\r\nreturn (\r\n  <div>\r\n    <br/>\r\n\r\n<Home/>\r\n  </div>\r\n\r\n\r\n)\r\n}\r\n}\r\n","import React from \"react\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Image, Grid, Container, Label, Divider, Button } from 'semantic-ui-react'\r\nimport config from '../config'\r\n\r\nclass Detail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      isLoading: true,\r\n      bot: {}\r\n    };\r\n  }\r\n\r\n\r\n  getData = async (id) => {\r\n    const bot = await axios.get(\r\n      config.api + '/bots/get/' + id\r\n    )\r\n    this.setState({ bot : bot.data.data[0], isLoading: false });\r\n  };\r\n\r\n \r\n  componentDidMount(props) {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    this.getData(id);\r\n  }\r\n  render() {\r\n    const { bot, isLoading } = this.state;\r\n\r\n    console.log(bot)\r\n    return (\r\n      <Container>\r\n        <br/>\r\n      <Grid divided='vertically'>\r\n        { isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <Grid.Row columns={2}>\r\n              <Grid.Column>\r\n              <Image src={\"https://cdn.discordapp.com/avatars/\"+bot.id+\"/\"+bot.avatar+\".webp\"} size='medium' rounded />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n        <br/>\r\n        <h1 style={{'font-size':'50px'}}>{bot.name}</h1>\r\n        <Label>\r\n          상태\r\n        <Label.Detail><Label circular color={status[bot.status]} empty key='status' /></Label.Detail>\r\n        </Label>\r\n\r\n        <Label>\r\n          접두사\r\n        <Label.Detail>{bot.prefix}</Label.Detail>\r\n        </Label>\r\n        <Label>\r\n          라이브러리\r\n        <Label.Detail>{bot.lib}</Label.Detail>\r\n        </Label>\r\n        <br />\r\n        <p style={{\"margin-top\" : \"10px\", \"font-size\" : \"20px\"}}>\r\n          {bot.intro}\r\n        </p>\r\n        <br/>\r\n        <Label.Group tag>\r\n          카테고리 :  <br/>\r\n        {bot.category.length == 0 ? (\r\n          ' 지정되지 않음'\r\n        ):(\r\n          bot.category.map(c => (\r\n          <Label as='a'>{c}</Label>\r\n          ))\r\n        )}\r\n        </Label.Group>\r\n        <br />\r\n          {\r\n            bot.url == \"false\" ? (\r\n              <Button className=\"discord\" content='초대하기' labelPosition='left' icon='discord' href={`https://discordapp.com/oauth2/authorize?client_id=${bot.id}&scope=bot&permissions=0`}></Button>\r\n            ) : \r\n            <Button className=\"discord\" content='초대하기' labelPosition='left' icon='discord' href={bot.url}></Button>\r\n          }\r\n          {\r\n            bot.web == \"false\" ? (\r\n              ''\r\n            ) : \r\n            <Button color=\"blue\" content='초대하기' labelPosition='left' icon='globe' href={bot.web}></Button>\r\n          }\r\n          \r\n          {\r\n            bot.git == \"false\" ? (\r\n              ''\r\n            ) : \r\n            <Button color=\"black\" content='Git' labelPosition='left' icon='git' href={bot.github}></Button>\r\n          }\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        )}\r\n     </Grid>\r\n     <Grid.Row columns={5}> \r\n       <Grid.Column>\r\n       <Button className=\"discord\" content={bot.servers==0? 'N/A' : bot.servers + ' 서버'} ></Button>\r\n        <Button content={bot.votes} color='red' icon='heart' labelPosition='right' />\r\n       </Grid.Column>\r\n       <Grid.Column>\r\n         <br/>\r\n        <div>\r\n          제작자 : \r\n        <img src={\"https://cdn.discordapp.com/avatars/\"+bot.id+\"/\"+bot.avatar+\".webp\"} class=\"ui avatar image\" />\r\n        <span>Username#Tag</span>\r\n        </div>\r\n       </Grid.Column>\r\n     </Grid.Row>\r\n     \r\n     <Divider section />\r\n     <p>\r\n       {bot.desc}\r\n     </p>\r\n     </Container>\r\n    );\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Detail\r\n\r\n\r\nconst status = {\r\n  online : 'green',\r\n  idle : 'yellow',\r\n  dnd : 'red',\r\n  offline : 'gray',\r\n  streaming : 'purple'\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Image, Grid, Container, Label, Divider, Button } from 'semantic-ui-react'\r\nimport config from '../config'\r\n\r\nclass Detail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      isLoading: true,\r\n      bot: {}\r\n    };\r\n  }\r\n\r\n\r\n  getData = async (id) => {\r\n    const bot = await axios.get(\r\n        config.api + '/bots/get/' +id\r\n    )\r\n    this.setState({ bot : bot.data.data[0], isLoading: false });\r\n  };\r\n\r\n \r\n  componentDidMount(props) {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    this.getData(id);\r\n  }\r\n  render() {\r\n    const { bot, isLoading } = this.state;\r\n\r\n    console.log(this.props)\r\n    return (\r\n      <Container>\r\n       \r\n     </Container>\r\n    );\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Detail\r\n\r\n\r\nconst status = {\r\n  online : 'green',\r\n  idle : 'yellow',\r\n  dnd : 'red',\r\n  offline : 'gray',\r\n  streaming : 'purple'\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Image, Grid, Container, Label, Divider, Button } from 'semantic-ui-react'\r\nimport config from \"../config\"\r\n\r\nclass Detail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      isLoading: true,\r\n      user: {}\r\n    };\r\n  }\r\n\r\n\r\n  getData = async (id) => {\r\n    await axios.get(\r\n      config.api+ '/users/get/' +id\r\n    )\r\n    .then(user=>{\r\n        this.setState({ user : user.data.user, isLoading: false });\r\n        axios.get(config.api+user.data.user.id)\r\n        .then(async res=>{\r\n            if(res.data.code == 200){\r\n                console.log(res.data.data)\r\n                await localStorage.setItem(\r\n                    \"token\" , res.data.data[0].token\r\n                )\r\n                this.props.history.push('/')\r\n            }\r\n            else {\r\n                console.log('ㅇㅇㅇㅇㅇㅇ')\r\n                axios.post(config.api + '/users/create/' + id, {headers : {tag : user.data.user.tag, username : user.data.user.username, avatar : user.data.user.avatar}})\r\n                .then(async newUser=>{\r\n                  await localStorage.setItem(\r\n                    \"token\", newUser.data.data.token\r\n                  )\r\n                  this.props.history.push('/')\r\n                })\r\n            }\r\n        })\r\n    })\r\n\r\n  };\r\n\r\n \r\n  componentDidMount(props) {\r\n    var token = this.props.location.search\r\n    console.log(token.replace('?', ''))\r\n    console.log(new URLSearchParams(token.replace('?', '')).get('code'))\r\n    token = new URLSearchParams(token.replace('?', '')).get('code')\r\n    console.log(this.props)\r\n    this.getData(token);\r\n  }\r\n  render() {\r\n    const { bot, isLoading } = this.state;\r\n\r\n    console.log(bot)\r\n    return (\r\n      <Container>\r\n      \r\n     </Container>\r\n    );\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Detail\r\n\r\n","import React, { Component } from 'react'\r\nimport Sketch from 'react-p5'\r\nimport \"./404.css\"\r\n\r\nexport default class MenuExampleStackable extends Component {   \r\n    setup = (p5, canvasParentRef) => {\r\n        p5.createCanvas(window.innerWidth, window.innerHeight).parent(canvasParentRef)\r\n      }\r\n      draw = p5 => {\r\n        p5.background(20)\r\n        p5.noStroke()\r\n        for(let i=0; i<800; i++){\r\n            p5.ellipse(Math.floor(Math.random() * window.innerWidth) + 1 ,Math.floor(Math.random() * window.innerHeight) + 1   , 4, 8)\r\n\r\n        }\r\n        // NOTE: Do not use setState in draw function or in functions that is executed in draw function... pls use normal variables or class properties for this purposes\r\n        this.x++\r\n      }\r\n      render() {\r\n  \r\n      return (\r\n          \r\n        <div className=\"notfound\">\r\n            <a>GG</a>\r\n\r\n        <h2>Oops! Page not found.</h2>\r\n        <br/>\r\n        <h1>404</h1>\r\n       \r\n               \r\n      </div>\r\n        \r\n      )\r\n    }\r\n  }\r\n  ","import React, { Component } from 'react'\r\nimport { Menu, Image } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Search from \"./Search\"\r\nimport Config from \"../config\"\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nexport default class MenuExampleStackable extends Component {\r\n      constructor(props){\r\n        super(props)\r\n        console.log(this.props.token)\r\n        const token = this.props.token\r\n        this.state = {\r\n          isLoading : true,\r\n          user : {}\r\n        }\r\n      }\r\n\r\n\r\n      componentDidMount(){\r\n        const getUser = async(token) => {\r\n          axios({method : 'GET', url: config + '/users/login', headers : {token : token}})\r\n          .then(r=>{\r\n          this.setState({user : r.data.user, isLoading : false})\r\n          })\r\n          .catch(err=>console.log(err))\r\n        }\r\n        getUser(this.props.token)\r\n      }\r\n     \r\n      render() {\r\n        console.log(this.state)\r\n      return (\r\n        <Menu stackable>\r\n          <Menu.Item>\r\n            <img src='/logo.png' alt=\"logo\"/>\r\n          </Menu.Item>\r\n  \r\n          <Menu.Item\r\n            name='홈'\r\n            href=\"/\"\r\n            >\r\n            홈\r\n          </Menu.Item>\r\n  \r\n          <Menu.Item\r\n            name='디스코드'\r\n            href=\"https://discord.gg/JEh53MQ\"\r\n          >\r\n            디스코드\r\n          </Menu.Item>\r\n        \r\n        \r\n          <Menu.Menu position='right'>\r\n          \r\n            <Menu.Item>\r\n            <Search/>\r\n            </Menu.Item>\r\n            {\r\n              this.state.isLoading ? (\r\n                <Menu.Item\r\n                icon='discord'\r\n                color='black'\r\n                name='로그인'\r\n                href={Config.url}\r\n              >\r\n                로그인d\r\n              </Menu.Item>\r\n              )\r\n              :\r\n              (\r\n                <Menu.Item\r\n                icon='discord'\r\n                name='로그인'\r\n                href={Config.url}\r\n              >\r\n\r\n                <div>\r\n                  <Image src={\"https://cdn.discordapp.com/avatars/\"+this.state.user.id+\"/\"+this.state.user.avatar+\".webp\"} avatar />\r\n                  <span> {this.state.user.username}#{this.state.user.tag}</span>\r\n                </div>\r\n\r\n               \r\n              </Menu.Item>\r\n              )\r\n            }\r\n          </Menu.Menu>\r\n        </Menu>\r\n      )\r\n    }\r\n  }\r\n  \r\n ","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport About from \"./routes/About\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Search from \"./routes/Search\";\r\nimport Callback from \"./routes/Callback\";\r\nimport \"./App.css\";\r\nimport NotFound from \"./components/404\"\r\nimport Menu from \"./components/Menu\"\r\n\r\nfunction App() {\r\n  console.log(localStorage.getItem('token'))\r\n  return (\r\n    \r\n    <Router>\r\n      \r\n      <Menu token={localStorage.getItem('token')}/>\r\n      <Switch>\r\n      \r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/callback\" component={Callback} />\r\n      <Route path=\"/bots/:id\" component={Detail} />\r\n      <Route path=\"/discord\">\r\n        <Redirect to=\"https://discord.gg\"/>\r\n      </Route>\r\n      <Route component={NotFound}></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"potato\"));\r\n"],"sourceRoot":""}